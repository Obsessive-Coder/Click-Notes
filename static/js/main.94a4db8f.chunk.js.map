{"version":3,"sources":["components/Header/index.js","components/MainNavbar/sub-components/NavItemsList.js","components/MainNavbar/sub-components/index.js","utils/constants.js","components/MainNavbar/index.js","components/SubHeader/sub-components/CandidateInfo.js","components/SubHeader/index.js","components/BehaviorList/index.js","components/ErrorList/index.js","components/ReportModal/index.js","pages/Home/home.js","App.js","reportWebVitals.js","index.js"],"names":["Header","children","this","props","className","Component","NavItemsList","navItems","makeReport","Fragment","map","navItem","hasOwnProperty","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","items","item","text","id","DropdownItem","disabled","tag","href","location","target","NavItem","NavLink","MAIN_NAV_ITEMS","DESIRED_CANDIDATE_TRAITS","isDone","POSITIVE_BEHAVIORS","count","NEGATIVE_BEHAVIORS","RED_FLAGS","ERRORS","MainNavbar","toggleNavbar","bind","state","collapsed","setState","Navbar","dark","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","isOpen","Nav","CandidateInfo","candidateInfo","candidate","name","interviewType","university","SubHeader","traits","handleTraitClick","desiredTraitsButtons","trait","Button","outline","size","color","data-category","data-name","icon","faCheck","faTimes","fixedWidth","style","left","top","Container","fluid","undefined","ButtonGroup","vertical","BehaviorList","behaviors","subcategory","handleClick","handleRightClick","behavior","data-sub-category","onContextMenu","Badge","ErrorList","errors","ListGroup","flush","error","ListGroupItem","action","faCheckSquare","faSquare","ReportModal","modal","report","observedTraits","observedBehaviors","fixedErrors","toggle","handleOpen","prevState","Modal","onOpened","ModalHeader","ModalBody","length","index","positiveBehaviors","negativeBehaviors","redFlags","ModalFooter","faCopy","Home","handleBehaviorClick","handleBehaviorRightClick","handleErrorClick","event","traitName","getAttribute","updatedTraits","behaviorButton","updatedBehaviors","preventDefault","errorName","updatedErrors","key","push","behaviorsList","innerKey","Row","Col","xs","sm","md","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94a4db8f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <header className=\"mb-lg-3 bg-primary shadow app-header\">\r\n        {children}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n// Reactstrap components.\r\nimport { NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownItem, DropdownMenu } from 'reactstrap';\r\n\r\n// Custom components.\r\nimport { ReportModal } from '../../';\r\n\r\nexport default function NavItemsList(props) {\r\n  const { navItems, makeReport } = props;\r\n\r\n  // Iterate over the nav items array and make a reactstrap NavItem component for each.\r\n  return (\r\n    <React.Fragment>\r\n      {navItems.map((navItem) => (\r\n        navItem.hasOwnProperty('items') ? (\r\n          <UncontrolledDropdown\r\n            nav inNavbar\r\n            key={navItem.id}\r\n          >\r\n            <DropdownToggle\r\n              nav caret\r\n              className=\"font-italic text-uppercase font-small\"\r\n            >\r\n              More\r\n            </DropdownToggle>\r\n            <DropdownMenu\r\n              right\r\n              className=\"bg-primary shadow\"\r\n            >\r\n              <div className=\"d-flex justify-content-around\">\r\n                {navItem.items.map((item) => (\r\n                  item.text === 'report' ? (\r\n                    <ReportModal\r\n                      key={item.id}\r\n                      makeReport={makeReport}\r\n                    />\r\n                  ) : (\r\n                    <DropdownItem\r\n                      disabled\r\n                      key={item.id}\r\n                      tag=\"a\"\r\n                      href={item.location}\r\n                      target=\"_blank\"\r\n                      className=\"flex-fill text-center text-uppercase text-white-50 font-italic nav-sub-item\"\r\n                    >\r\n                      {item.text}\r\n                    </DropdownItem>\r\n                  )\r\n                ))}\r\n              </div>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        ) : (\r\n          <NavItem\r\n            key={navItem.id}\r\n          >\r\n            <NavLink\r\n              disabled\r\n              href={navItem.location}\r\n              className=\"py-1 font-italic text-uppercase\"\r\n              target=\"_blank\"\r\n            >\r\n              {navItem.text}\r\n            </NavLink>\r\n          </NavItem>\r\n        )\r\n      ))}\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import NavItemsList from './NavItemsList';\r\n\r\nexport { NavItemsList };\r\n\r\nexport default { NavItemsList };\r\n","const MAIN_NAV_ITEMS = [\r\n  { id: 0, text: 'calendar', location: '#' },\r\n  { id: 1, text: 'script', location: '#' },\r\n  { id: 2, text: 'follow-up', location: '#' },\r\n  { id: 3, text: 'more', items: [\r\n    { id: 4, text: 'sop', location: '#' },\r\n    { id: 5, text: 'checklist', location: '#' },\r\n    { id: 6, text: 'reschedule', location: '#' },\r\n    { id: 7, text: 'report', location: '#' }\r\n  ]}\r\n];\r\n\r\nconst DESIRED_CANDIDATE_TRAITS = [\r\n  { id: 0, text: 'personable', isDone: false },\r\n  { id: 1, text: 'passionate', isDone: false },\r\n  { id: 2, text: 'prepared', isDone: false },\r\n  { id: 3, text: 'professional', isDone: false },\r\n  { id: 4, text: 'knowledgeable', isDone: false },\r\n  { id: 5, text: 'engaged', isDone: false },\r\n  { id: 6, text: 'coachable', isDone: false },\r\n  { id: 7, text: 'comprehensible', isDone: false }\r\n];\r\n\r\nconst POSITIVE_BEHAVIORS = [\r\n  { id: 9, text: 'empathized', count: 0 },\r\n  { id: 10, text: 'encouraged', count: 0 },\r\n  { id: 11, text: 'validated', count: 0 },\r\n  { id: 0, text: 'asked goal', count: 0 },\r\n  { id: 1, text: 'opened console', count: 0 },\r\n  { id: 2, text: 'used search', count: 0 },\r\n  { id: 8, text: 'leading question', count: 0 },\r\n  { id: 15, text: 'explain it back', count: 0 },\r\n  { id: 14, text: 'offered follow-up', count: 0 },\r\n  { id: 3, text: 'checked understanding', count: 0 },\r\n  { id: 4, text: 'student read error', count: 0 },\r\n  { id: 5, text: 'student explained error', count: 0 },\r\n  { id: 6, text: 'quality explanation', count: 0 },\r\n  { id: 7, text: 'explained resource', count: 0 },\r\n  { id: 12, text: 'compared own code', count: 0 },\r\n  { id: 13, text: 'compared online code', count: 0 },\r\n  { id: 16, text: 'tips, tricks, & wisdom', count: 0 },\r\n  { id: 17, text: 'mentioned formatting', count: 0 },\r\n  { id: 20, text: 'adapted', count: 0 }\r\n];\r\n\r\nconst NEGATIVE_BEHAVIORS = [\r\n  { id: 14, text: 'apathetic', count: 0 },\r\n  { id: 0, text: 'discouraging', count: 0 },\r\n  { id: 15, text: 'disinterested', count: 0 },\r\n  { id: 12, text: 'profanity', count: 0 },\r\n  { id: 4, text: 'fumble', count: 0 },\r\n  { id: 7, text: 'false info', count: 0 },\r\n  { id: 17, text: 'minor silence', count: 0 },\r\n  { id: 1, text: 'too complex', count: 0 },\r\n  { id: 3, text: 'rabbit hole', count: 0 },\r\n  { id: 9, text: 'read error', count: 0 },\r\n  { id: 11, text: 'explained error', count: 0 },\r\n  { id: 10, text: 'error location', count: 0 },\r\n  { id: 13, text: 'not using console', count: 0 },\r\n  { id: 5, text: 'wrong change', count: 0 },\r\n  { id: 6, text: 'extra formatting', count: 0 },\r\n  { id: 8, text: 'confusion ignored', count: 0 },\r\n  { id: 16, text: 'self-doubt ignored', count: 0 },\r\n  { id: 2, text: 'i\\'m confused', count: 0 }\r\n];\r\n\r\nconst RED_FLAGS = [\r\n  { id: 0, text: 'CDN', count: 0 },\r\n  { id: 1, text: 'silences', count: 0 },\r\n  { id: 3, text: 'answers', count: 0 },\r\n  { id: 2, text: 'responses', count: 0 },\r\n  { id: 4, text: 'changes', count: 0 },\r\n  { id: 5, text: 'other', count: 0 }\r\n];\r\n\r\nconst ERRORS = [\r\n  { id: 0, text: 'jquery CDN', isDone: false },\r\n  { id: 1, text: 'CDN order', isDone: false },\r\n  { id: 2, text: 'alert syntax', isDone: false },\r\n  { id: 3, text: 'bling - doc.ready()', isDone: false },\r\n  { id: 4, text: 'bling - button.on()', isDone: false },\r\n  { id: 5, text: 'event delegation', isDone: false },\r\n  { id: 6, text: 'poor formatting', isDone: false },\r\n  { id: 7, text: 'missing semicolons', isDone: false }\r\n];\r\n\r\nexport {\r\n  MAIN_NAV_ITEMS, DESIRED_CANDIDATE_TRAITS, POSITIVE_BEHAVIORS,\r\n  NEGATIVE_BEHAVIORS, RED_FLAGS, ERRORS\r\n};\r\n\r\nexport default {\r\n  MAIN_NAV_ITEMS, DESIRED_CANDIDATE_TRAITS, POSITIVE_BEHAVIORS,\r\n  NEGATIVE_BEHAVIORS, RED_FLAGS, ERRORS\r\n};\r\n","import React, { Component } from 'react';\r\n\r\n// Reactstrap components.\r\nimport {\r\n  Collapse, Navbar, NavbarToggler, NavbarBrand, Nav\r\n} from 'reactstrap';\r\n\r\n// Custom components.\r\nimport { NavItemsList } from './sub-components';\r\n\r\n// API utils, helpers, and other assets.\r\nimport { MAIN_NAV_ITEMS } from '../../utils/constants';\r\n\r\n// NOTE: This is directly from the reactstrap docs, with slight modifications.\r\nexport default class MainNavbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = { collapsed: true };\r\n  }\r\n\r\n  toggleNavbar() {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { makeReport } = this.props;\r\n    return (\r\n      <Navbar\r\n        dark\r\n        className=\"navbar-expand-md align-items-baseline mb-3 py-0 py-md-2 shadow-sm\"\r\n      >\r\n        <NavbarBrand href=\"/\" className=\"mr-auto\">\r\n          CLICK NOTES\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2 rounded-circle\" />\r\n        <Collapse\r\n          navbar\r\n          isOpen={!this.state.collapsed}\r\n        >\r\n          <Nav navbar className=\"flex-row flex-wrap justify-content-around ml-auto text-left\">\r\n            <NavItemsList navItems={MAIN_NAV_ITEMS} makeReport={makeReport} />\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function CandidateInfo(props) {\r\n  const { candidate } = props;\r\n\r\n  // NOTE: This shouldn't be needed after calendar integration.\r\n  // Make a placeholder candidate if one does not exist.\r\n  let candidateInfo = candidate;\r\n  if (!candidateInfo) {\r\n    candidateInfo = {\r\n      name: 'candidate name',\r\n      interviewType: 'type',\r\n      university: 'name of university'\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-around flex-wrap flex-md-nowrap\">\r\n      <h3\r\n        className=\"flex-grow-1 flex-md-grow-0 w-50 px-md-5 mb-0 text-capitalize text-truncate text-left\"\r\n      >\r\n        {candidateInfo.name}\r\n      </h3>\r\n      <span className=\"mx-4 text-uppercase\">\r\n        {candidateInfo.interviewType}\r\n      </span>\r\n      <span className=\"flex-grow-1 text-capitalize text-truncate\">\r\n        {candidateInfo.university}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n// Reactstrap components.\r\nimport { Container, Button, ButtonGroup } from 'reactstrap';\r\n\r\n// Font Awesome Icons.\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n// Custom components.\r\nimport { CandidateInfo } from './sub-components';\r\n\r\nexport default function SubHeader(props) {\r\n  const { traits, handleTraitClick } = props;\r\n  const desiredTraitsButtons = traits.map((trait) => (\r\n    <Button\r\n      key={trait.id}\r\n      outline={!trait.isDone}\r\n      size=\"sm\"\r\n      color={trait.isDone === true ? 'success' : 'light'}\r\n      data-category=\"traits\"\r\n      data-name={trait.text}\r\n      onClick={handleTraitClick}\r\n      className=\"position-relative w-25 px-3 rounded-0 text-truncate text-capitalize trait-button\"\r\n    >\r\n      {trait.isDone && (\r\n        <FontAwesomeIcon\r\n          icon={trait.isDone === true ? faCheck : faTimes}\r\n          fixedWidth\r\n          size=\"lg\"\r\n          style={{ left: 0, top: 0 }}\r\n          className=\"position-absolute no-pointer-events\"\r\n        />\r\n      )}\r\n      <span className=\"d-inline-block no-pointer-events\">\r\n        {trait.text}\r\n      </span>\r\n    </Button>\r\n  ));\r\n\r\n  // TODO: Replace \"undefined in CandidateInfo props to actual candidate info.\"\r\n  return (\r\n    <Container fluid className=\"d-flex flex-column\">\r\n      <CandidateInfo candidate={undefined} />\r\n\r\n      <div className=\"d-flex justify-content-center flex-wrap flex-md-nowrap py-4\">\r\n        <div className=\"d-flex flex-wrap flex-grow-1 shadow\">\r\n          {desiredTraitsButtons}\r\n        </div>\r\n        <div className=\"d-flex flex-fill justify-content-around w-25 px-5 px-md-3 pt-3 py-md-0\">\r\n          <Button\r\n            disabled\r\n            color=\"dark\"\r\n            className=\"mr-1 rounded-circle text-capitalize shadow-lg round-button\"\r\n          >\r\n            round 1\r\n          </Button>\r\n          <Button\r\n            disabled\r\n            color=\"dark\"\r\n            className=\"ml-1 rounded-circle text-capitalize-lg shadow round-button\"\r\n          >\r\n            round 2\r\n          </Button>\r\n        </div>\r\n        <ButtonGroup\r\n          vertical\r\n          className=\"flex-fill w-25 px-0 pl-sm-3 pt-3 py-md-0 border-left border-light outcome-button-group\"\r\n        >\r\n          <Button\r\n            disabled\r\n            size=\"lg\"\r\n            color=\"success\"\r\n            className=\"text-uppercase font-weight-bolder pass-button\"\r\n          >\r\n            pass\r\n          </Button>\r\n          <ButtonGroup size=\"sm\">\r\n            <Button\r\n              disabled\r\n              color=\"warning\"\r\n              className=\"text-capitalize substitute-button\"\r\n            >\r\n              substitute\r\n            </Button>\r\n            <Button\r\n              disabled\r\n              color=\"danger\"\r\n              className=\"text-capitalize fail-button\"\r\n            >\r\n              fail\r\n            </Button>\r\n          </ButtonGroup>\r\n        </ButtonGroup>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n// Reactstrap components.\r\nimport { Container, Button, Badge } from 'reactstrap';\r\n\r\nexport default function BehaviorList(props) {\r\n  const { behaviors, color, subcategory, handleClick, handleRightClick } = props;\r\n\r\n  return (\r\n    <Container className=\"d-flex flex-wrap justify-content-center p-0\">\r\n      {behaviors.map((behavior) => (\r\n        <Button\r\n          key={behavior.id}\r\n          outline\r\n          size=\"sm\"\r\n          color={color}\r\n          data-category=\"behaviors\"\r\n          data-sub-category={subcategory}\r\n          data-name={behavior.text}\r\n          onClick={handleClick}\r\n          onContextMenu={handleRightClick}\r\n          className=\"position-relative w-25 m-1 text-capitalize text-wrap text-truncate rounded-lg shadow behavior-button\"\r\n        >\r\n          {behavior.text}\r\n          <Badge\r\n            color=\"transparent\"\r\n            style={{right: 1}}\r\n            className=\"position-absolute p-0 font-large text-muted\"\r\n          >\r\n            {behavior.count}\r\n          </Badge>\r\n        </Button>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n// Reactstrap components.\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\n// Font Awesome Icons.\r\nimport { faSquare, faCheckSquare } from '@fortawesome/free-regular-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default function ErrorList(props) {\r\n  const { errors, handleClick } = props;\r\n\r\n  return (\r\n    <ListGroup\r\n      flush\r\n      className=\"text-justify mx-3 mx-md-1\"\r\n    >\r\n      {errors.map((error) => (\r\n        <ListGroupItem\r\n          action\r\n          key={error.id}\r\n          tag=\"button\"\r\n          color={error.isDone ? 'success' : 'warning'}\r\n          data-category=\"errors\"\r\n          data-name={error.text}\r\n          onClick={handleClick}\r\n          className=\"py-0 px-2 text-capitalize error-button\"\r\n        >\r\n          <FontAwesomeIcon\r\n            size=\"lg\"\r\n            icon={error.isDone ? faCheckSquare : faSquare}\r\n            className=\"mr-2\"\r\n          />\r\n          {error.text}\r\n        </ListGroupItem>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n// Reactstrap components.\r\nimport {\r\n  Button, Badge, Modal, ModalHeader, ModalBody, ModalFooter, ListGroup, ListGroupItem\r\n} from 'reactstrap';\r\n\r\n// Font Awesome Icons.\r\nimport { faCopy } from '@fortawesome/free-regular-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default class ReportModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      report: {\r\n        observedTraits: [],\r\n        observedBehaviors: [],\r\n        fixedErrors: []\r\n      }\r\n    };\r\n\r\n    // Bind class methods.\r\n    this.toggle = this.toggle.bind(this);\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n\r\n  handleOpen() {\r\n    const { makeReport } = this.props;\r\n    const report = makeReport();\r\n    this.setState(() => ({ report }));\r\n  }\r\n\r\n  render() {\r\n    const { observedTraits, observedBehaviors, fixedErrors } = this.state.report;\r\n\r\n    return (\r\n      <div>\r\n        <Button\r\n          color=\"link\"\r\n          onClick={this.toggle}\r\n          className=\"flex-fill text-center text-uppercase text-white-50 font-italic dropdown-item nav-sub-item\"\r\n        >\r\n          report\r\n        </Button>\r\n        <Modal\r\n          size=\"lg\"\r\n          isOpen={this.state.modal}\r\n          toggle={this.toggle}\r\n          onOpened={this.handleOpen}\r\n          className=\"mw-100 mx-5 report-modal\">\r\n          <ModalHeader\r\n            tag=\"h4\"\r\n            toggle={this.toggle}\r\n            className=\"bg-primary text-capitalize text-white-50 shadow\"\r\n          >\r\n            interview report\r\n          </ModalHeader>\r\n          <ModalBody className=\"pb-0 shadow-sm text-center\">\r\n            <div className=\"mx-auto w-50\">\r\n              <h5 className=\"text-capitalize\">observed traits</h5>\r\n              <div className=\"d-flex justify-content-center flex-wrap text-capitalize\">\r\n                {observedTraits.length === 0 && (\r\n                  <p>no data</p>\r\n                )}\r\n                {observedTraits.map((trait) => (\r\n                  <span key={trait.index} className=\"w-25 text-capitalize font-weight-bold\">\r\n                    {trait.text}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"my-4 pb-3\">\r\n              <h5 className=\"text-capitalize\">observed behaviors</h5>\r\n              <div className=\"d-flex flex-wrap justify-content-around text-capitalize text-center\">\r\n                <div className=\"flex-fill border-right border-dark report-section\">\r\n                  <p className=\"mb-0 font-weight-bold report-sub-heading\">positive</p>\r\n                  {observedBehaviors.positiveBehaviors && observedBehaviors.positiveBehaviors.length === 0 && (\r\n                    <p>no data</p>\r\n                  )}\r\n                  <ListGroup flush className=\"flex-wrap mx-3 mh-100\">\r\n                    {observedBehaviors.positiveBehaviors && observedBehaviors.positiveBehaviors.map((behavior) => (\r\n                      <ListGroupItem key={behavior.id} className=\"p-0 text-left\">\r\n                        <Badge color=\"transparent\" className=\"font-large text-muted\">\r\n                          {behavior.count}\r\n                        </Badge>\r\n                        <span className=\"d-inline-block\">\r\n                          {behavior.text}\r\n                        </span>\r\n                      </ListGroupItem>\r\n                    ))}\r\n                  </ListGroup>\r\n                </div>\r\n                <div className=\"flex-fill report-section\">\r\n                  <p className=\"mb-0 font-weight-bold report-sub-heading\">negative</p>\r\n                  {observedBehaviors.negativeBehaviors && observedBehaviors.negativeBehaviors.length === 0 && (\r\n                    <p>no data</p>\r\n                  )}\r\n                  <ListGroup flush className=\"flex-wrap mx-3 mh-100\">\r\n                    {observedBehaviors.negativeBehaviors && observedBehaviors.negativeBehaviors.map((behavior) => (\r\n                      <ListGroupItem key={behavior.id} className=\"p-0 text-capitalize text-left\">\r\n                        <Badge color=\"transparent\" className=\"font-large text-muted\">\r\n                          {behavior.count}\r\n                        </Badge>\r\n                        <span className=\"d-inline-block\">\r\n                          {behavior.text}\r\n                        </span>\r\n                      </ListGroupItem>\r\n                    ))}\r\n                  </ListGroup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"my-3 pb-3\">\r\n              <div className=\"d-flex flex-wrap justify-content-around text-capitalize text-center\">\r\n                <div className=\"flex-fill pb-3 border-right border-dark report-section-bottom\">\r\n                  <p className=\"mb-0 font-weight-bold report-sub-heading\">red flags</p>\r\n                  {observedBehaviors.redFlags && observedBehaviors.redFlags.length === 0 && (\r\n                    <p>no data</p>\r\n                  )}\r\n                  <ListGroup flush className=\"flex-wrap mx-3 mh-100\">\r\n                    {observedBehaviors.redFlags && observedBehaviors.redFlags.map((behavior) => (\r\n                      <ListGroupItem key={behavior.id} className=\"p-0 text-capitalize text-left\">\r\n                        <Badge color=\"transparent\" className=\"font-large text-muted\">\r\n                          {behavior.count}\r\n                        </Badge>\r\n                        <span className=\"d-inline-block\">\r\n                          {behavior.text}\r\n                        </span>\r\n                      </ListGroupItem>\r\n                    ))}\r\n                  </ListGroup>\r\n                </div>\r\n                <div className=\"flex-fill pb-3 report-section-bottom\">\r\n                  <p className=\"mb-0 font-weight-bold report-sub-heading\">errors</p>\r\n                  {fixedErrors.length === 0 && (\r\n                    <p>no data</p>\r\n                  )}\r\n                  <ListGroup flush className=\"flex-wrap mx-3 mh-100\">\r\n                    {fixedErrors.map((error) => (\r\n                      <ListGroupItem key={error.id} className=\"p-0 text-left\">\r\n                        <span className=\"d-inline-block\">\r\n                          {error.text}\r\n                        </span>\r\n                      </ListGroupItem>\r\n                    ))}\r\n                  </ListGroup>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter className=\"align-items-end py-1\">\r\n            <Button\r\n              disabled\r\n              color=\"primary\"\r\n              onClick={this.toggle}\r\n              className=\"shadow\"\r\n            >\r\n              <FontAwesomeIcon size=\"lg\" icon={faCopy} />\r\n            </Button>\r\n            <Button\r\n              color=\"link\"\r\n              onClick={this.toggle}\r\n              className=\"text-capitalize\"\r\n            >\r\n              close\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n// Reactstrap components.\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\n// Custom components.\r\nimport { Header, MainNavbar, SubHeader, BehaviorList, ErrorList } from '../../components';\r\n\r\n// API utilities, helpers, and other assets.\r\nimport { DESIRED_CANDIDATE_TRAITS, POSITIVE_BEHAVIORS, NEGATIVE_BEHAVIORS, RED_FLAGS, ERRORS } from '../../utils/constants';\r\nimport './home.css';\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      behaviors: {\r\n        positiveBehaviors: POSITIVE_BEHAVIORS,\r\n        negativeBehaviors: NEGATIVE_BEHAVIORS,\r\n        redFlags: RED_FLAGS\r\n      },\r\n      traits: DESIRED_CANDIDATE_TRAITS,\r\n      errors: ERRORS\r\n    };\r\n\r\n    // Bind class methods.\r\n    this.handleTraitClick = this.handleTraitClick.bind(this);\r\n    this.handleBehaviorClick = this.handleBehaviorClick.bind(this);\r\n    this.handleBehaviorRightClick = this.handleBehaviorRightClick.bind(this);\r\n    this.handleErrorClick = this.handleErrorClick.bind(this);\r\n    this.makeReport = this.makeReport.bind(this);\r\n  }\r\n\r\n  handleTraitClick(event) {\r\n    const { traits } = this.state;\r\n    const traitName = event.target.getAttribute('data-name');\r\n    if (traitName) {\r\n      const updatedTraits = traits.map((trait) => {\r\n        if (trait.text === traitName) {\r\n          trait.isDone = !trait.isDone;\r\n        }\r\n        return trait;\r\n      });\r\n      this.setState(() => ({ traits: updatedTraits }));\r\n    }\r\n  }\r\n\r\n  handleBehaviorClick(event) {\r\n    const { behaviors } = this.state;\r\n    const behaviorButton = event.target;\r\n    const subcategory = behaviorButton.getAttribute('data-sub-category');\r\n    const name = behaviorButton.getAttribute('data-name');\r\n\r\n    if (subcategory) {\r\n      const currentBehaviors = behaviors[subcategory];\r\n      const updatedBehaviors = currentBehaviors.map((behavior) => {\r\n        if (behavior.text === name) {\r\n          behavior.count += 1;\r\n        }\r\n        return behavior;\r\n      });\r\n\r\n      behaviors[subcategory] = updatedBehaviors;\r\n      this.setState(() => ({ behaviors }));\r\n    }\r\n  }\r\n\r\n  handleBehaviorRightClick(event) {\r\n    event.preventDefault();\r\n\r\n    const { behaviors } = this.state;\r\n    const behaviorButton = event.target;\r\n    const subcategory = behaviorButton.getAttribute('data-sub-category');\r\n    const name = behaviorButton.getAttribute('data-name');\r\n\r\n    if (subcategory) {\r\n      const currentBehaviors = behaviors[subcategory];\r\n      const updatedBehaviors = currentBehaviors.map((behavior) => {\r\n        if (behavior.text === name) {\r\n          behavior.count -= 1;\r\n          if (behavior.count < 0) behavior.count = 0;\r\n        }\r\n        return behavior;\r\n      });\r\n\r\n      behaviors[subcategory] = updatedBehaviors;\r\n      this.setState(() => ({ behaviors }));\r\n    }\r\n  }\r\n\r\n  handleErrorClick(event) {\r\n    const { errors } = this.state;\r\n    const errorName = event.target.getAttribute('data-name');\r\n    if (errorName) {\r\n      const updatedErrors = errors.map((error) => {\r\n        if (error.text === errorName) {\r\n          error.isDone = !error.isDone;\r\n        }\r\n        return error;\r\n      });\r\n      this.setState(() => ({ errors: updatedErrors }));\r\n    }\r\n  }\r\n\r\n  makeReport() {\r\n    const { behaviors, errors, traits } = this.state;\r\n    let trait;\r\n    const observedTraits = [];\r\n    for (let key in traits) {\r\n      if (traits.hasOwnProperty(key)) {\r\n        trait = traits[key];\r\n        if (trait.isDone) observedTraits.push(trait);\r\n      }\r\n    }\r\n\r\n    let error;\r\n    const fixedErrors = [];\r\n    for (let key in errors) {\r\n      if (errors.hasOwnProperty(key)) {\r\n        error = errors[key];\r\n        if (error.isDone) fixedErrors.push(error);\r\n      }\r\n    }\r\n\r\n    let behaviorsList;\r\n    const observedBehaviors = [];\r\n    for (let key in behaviors) {\r\n      if (behaviors.hasOwnProperty(key)) {\r\n        behaviorsList = behaviors[key];\r\n        observedBehaviors[key] = [];\r\n        let behavior;\r\n        for (let innerKey in behaviorsList) {\r\n          if (behaviorsList.hasOwnProperty(innerKey)) {\r\n            behavior = behaviorsList[innerKey];\r\n            if (behavior.count >= 1) observedBehaviors[key].push(behavior);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return ({ observedTraits, observedBehaviors, fixedErrors });\r\n  }\r\n\r\n  render() {\r\n    const { behaviors, traits, errors } = this.state;\r\n    const { positiveBehaviors, negativeBehaviors, redFlags } = behaviors;\r\n\r\n    return (\r\n      <Container fluid className=\"p-0 app\">\r\n        <Header>\r\n          <MainNavbar makeReport={this.makeReport} />\r\n          <SubHeader\r\n            traits={traits}\r\n            handleTraitClick={this.handleTraitClick}\r\n          />\r\n        </Header>\r\n\r\n        <Container fluid>\r\n          <Row>\r\n            <Col\r\n              xs=\"12\" sm=\"6\" md=\"5\"\r\n              className=\"px-0 py-3\"\r\n            >\r\n              <h4 className=\"text-uppercase\">positive points</h4>\r\n              <BehaviorList\r\n                color=\"success\"\r\n                subcategory=\"positiveBehaviors\"\r\n                behaviors={positiveBehaviors}\r\n                handleClick={this.handleBehaviorClick}\r\n                handleRightClick={this.handleBehaviorRightClick}\r\n              />\r\n            </Col>\r\n            <Col\r\n              xs=\"12\" sm=\"6\" md=\"4\"\r\n              className=\"px-0 py-3\"\r\n            >\r\n              <h5 className=\"text-uppercase\">negative points</h5>\r\n              <BehaviorList\r\n                color=\"warning\"\r\n                subcategory=\"negativeBehaviors\"\r\n                behaviors={negativeBehaviors}\r\n                handleClick={this.handleBehaviorClick}\r\n                handleRightClick={this.handleBehaviorRightClick}\r\n              />\r\n            </Col>\r\n            <Col\r\n              xs=\"12\" sm=\"12\" md=\"3\"\r\n              className=\"px-0 py-3\"\r\n            >\r\n              <div className=\"d-flex flex-md-column flex-wrap flex-sm-nowrap\">\r\n                <div className=\"flex-fill pb-4 pt-sm-0 flags-section\">\r\n                  <h6 className=\"text-uppercase\">red flags</h6>\r\n                  <BehaviorList\r\n                    color=\"danger\"\r\n                    subcategory=\"redFlags\"\r\n                    behaviors={redFlags}\r\n                    handleClick={this.handleBehaviorClick}\r\n                    handleRightClick={this.handleBehaviorRightClick}\r\n                  />\r\n                </div>\r\n                <div className=\"flex-fill errors-section\">\r\n                  <h6 className=\"text-uppercase\">error summary</h6>\r\n                  <ErrorList\r\n                    errors={errors}\r\n                    handleClick={this.handleErrorClick}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\n\nimport './App.css';\n\n// Bootstrap components.\nimport { Container } from 'reactstrap';\n\n// Custom components.\nimport Home from './pages/Home/home';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Container\n        fluid\n        id=\"display\"\n        className=\"p-0\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}